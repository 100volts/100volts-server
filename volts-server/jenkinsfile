pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "100volts-server:latest"
        GITHUB_REPO = "https://github.com/100volts/100volts-server.git"
        DOCKERFILE_PATH = "volts-server/Dockerfile"
        BRANCH_NAME = "main"
        SONARQUBE_SERVER = "sonar-volts"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${BRANCH_NAME}", url: "${GITHUB_REPO}"
            }
        }

        stage('Scan') {
            steps {
                dir('volts-server') {
                    // Ensure Gradle Wrapper is executable
                    sh 'chmod +x ./gradlew'

                    // Run SonarQube analysis using Gradle
                    withSonarQubeEnv(installationName: "${SONARQUBE_SERVER}") {
                        sh './gradlew clean build sonarqube'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}", "-f ${DOCKERFILE_PATH} volts-server/")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    sh "docker stop 100volts-server || true"
                    sh "docker rm 100volts-server || true"

                    sh "docker run -d --name 100volts-server -p 8081:8081 ${DOCKER_IMAGE} --restart=always"
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace
            cleanWs()
        }
    }
}